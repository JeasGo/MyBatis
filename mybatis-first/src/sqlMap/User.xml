<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<mapper namespace="test">
	<select id="queryUserById" parameterType="int" resultType="cn.jeas.mybatis.pojo.User">
		SELECT * FROM `user` WHERE id = #{id} 
	</select>
	
	<select id="queryUserByUsername1" parameterType="string"
		resultType="cn.jeas.mybatis.pojo.User">
		SELECT * FROM `user` WHERE username LIKE #{username}
	</select>
	<!-- <select id="queryUserByUsername2" parameterType="string" resultType="cn.jeas.mybatis.pojo.User">
		SELECT * FROM `user` WHERE username LIKE '%${value}%'
	</select> -->
	<select id="queryUserByUsername" parameterType="string" resultType="cn.jeas.mybatis.pojo.User">
		SELECT * FROM `user` WHERE username LIKE '%${value}%'
	</select>
	
	
	<insert id="saveUser" parameterType="cn.jeas.mybatis.pojo.User">
		<selectKey keyColumn="id" keyProperty="id" order="AFTER" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO `user` (username,birthday,sex,address) VALUES (#{username},#{birthday},#{sex},#{address}) 
	</insert>
	
	<update id="updateUserById" parameterType="cn.jeas.mybatis.pojo.User">
		UPDATE `user` SET
			username = #{username} WHERE id = #{id}
	</update>
	
	<delete id="deleteUserById" parameterType="int">
		delete from user where
		id=#{id}
	</delete>
	
</mapper>

